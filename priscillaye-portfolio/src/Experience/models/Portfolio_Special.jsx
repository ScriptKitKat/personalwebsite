/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Portfolio_Special.glb 
*/

import React, {useRef} from 'react'
import { useGLTF } from '@react-three/drei'
import { useVideoTexture } from "@react-three/drei";
import { convertMaterialsToBasic } from '../utils/convertToBasic'
import * as THREE from 'three';
export default function Model(props) {
  const { nodes, materials } = useGLTF('/models/Portfolio_Special.glb')

  const computerScreen = useRef();
  const glass = useRef();

  const videoTexture = useVideoTexture("/videos/video.mp4", {
    crossOrigin: "anonymous",
    muted: true,
    loop: true,
    playsInline: true,
    start: true,
  });

  const glassTexture = new THREE.MeshBasicMaterial({
      transmission: 1,
      transparent: true,
      opacity: 0.3,
      color: 0xAEEBFF,
      metalness: 0,
      roughness: 0.05,
      ior: 0.95,
      thickness: 0.02,
      specularColor: 0xAEEBFF,
  });

  // Adjust video cropping using texture.repeat and texture.offset
  React.useEffect(() => {
    if (videoTexture) {
      videoTexture.repeat.set(1, 1); // Show 60% of the video
      videoTexture.offset.set(0.4, 0.5); // Start cropping at 20% from left/top
      videoTexture.needsUpdate = true;
    }
  }, [videoTexture]);

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.glass.geometry} material={glassTexture} position={[-3.565, 6.343, 3.355]} scale={1.039} />
      <mesh geometry={nodes.screen.geometry} position={[-3.81, 5.085, -1.653]}>
        <meshBasicMaterial
            map={videoTexture}
            color="#ffffffff"
            toneMapped={false}
          />
      </mesh>
    </group>
  )
}

useGLTF.preload('/Portfolio_Special.glb')